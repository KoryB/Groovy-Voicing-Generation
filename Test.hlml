//TODO: prevVoicing and workingVoicing access
//TODO: something with same chord back to back
//TODO: ability to have 'memory' with variables
//TODO:     perhaps with missingProperties?


def goodInversions = [
    [R, R, T, F], [R, T, R, F],
    [R, R, F, T], [R, T, F, R],
    [R, F, T, R], [R, F, R, T]
]

def RRTF = [R, R, T, F]
def RTTF = [R, T, T, F]

SCAN intervals FOR currentIntervals ON SATB

RESOLVE bass TO currentRoot WITHIN F2, B3

//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB
//random low:C2, high:C6 ON SATB

//
[BT, BA, BS, TA, TS, AS].each {
    SCAN intervalMotion FOR parallelPerfects ON it
}
SCAN members FOR RRTF ON BTAS
//
//RESOLVE 11 TO 0
//RESOLVE 5 TO 4
//RESOLVE 9 TO 7
//RESOLVE 2 TO 4
//RESOLVE 2 TO 0
////SCAN members FOR RTTF ON BTAS
//
DISTANCE 0
DISTANCE 1
DISTANCE 2